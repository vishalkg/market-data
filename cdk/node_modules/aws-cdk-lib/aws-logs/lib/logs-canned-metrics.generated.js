"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LogsMetrics=void 0;class LogsMetrics{static incomingLogEventsSum(dimensions){return{namespace:"AWS/Logs",metricName:"IncomingLogEvents",dimensionsMap:dimensions,statistic:"Sum"}}static incomingBytesSum(dimensions){return{namespace:"AWS/Logs",metricName:"IncomingBytes",dimensionsMap:dimensions,statistic:"Sum"}}static emfValidationErrorsSum(dimensions){return{namespace:"AWS/Logs",metricName:"EMFValidationErrors",dimensionsMap:dimensions,statistic:"Sum"}}static emfParsingErrorsSum(dimensions){return{namespace:"AWS/Logs",metricName:"EMFParsingErrors",dimensionsMap:dimensions,statistic:"Sum"}}static transformedLogEventsSum(dimensions){return{namespace:"AWS/Logs",metricName:"TransformedLogEvents",dimensionsMap:dimensions,statistic:"Sum"}}static transformedBytesSum(dimensions){return{namespace:"AWS/Logs",metricName:"TransformedBytes",dimensionsMap:dimensions,statistic:"Sum"}}static transformationErrorsSum(dimensions){return{namespace:"AWS/Logs",metricName:"TransformationErrors",dimensionsMap:dimensions,statistic:"Sum"}}static forwardedLogEventsSum(dimensions){return{namespace:"AWS/Logs",metricName:"ForwardedLogEvents",dimensionsMap:dimensions,statistic:"Sum"}}static deliveryErrorsSum(dimensions){return{namespace:"AWS/Logs",metricName:"DeliveryErrors",dimensionsMap:dimensions,statistic:"Sum"}}static deliveryThrottlingSum(dimensions){return{namespace:"AWS/Logs",metricName:"DeliveryThrottling",dimensionsMap:dimensions,statistic:"Sum"}}static logEventsWithFindingsSum(dimensions){return{namespace:"AWS/Logs",metricName:"LogEventsWithFindings",dimensionsMap:dimensions,statistic:"Sum"}}static anomalyCountSum(dimensions){return{namespace:"AWS/Logs",metricName:"AnomalyCount",dimensionsMap:dimensions,statistic:"Sum"}}}exports.LogsMetrics=LogsMetrics;
